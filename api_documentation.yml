openapi: 3.0.0
info:
  title: Store API
  description: API for managing products and categories in a store
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /products/{id}:
    get:
      summary: Get a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to retrieve
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      summary: Update a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    delete:
      summary: Delete a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to delete
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found
  /products:
    get:
      summary: Get a list of all products
      responses:
        '200':
          description: List of products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /categories/{category_id}:
    get:
      summary: Get a category by ID
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category to retrieve
      responses:
        '200':
          description: Category retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Category not found
    put:
      summary: Update a category by ID
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdate'
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Category not found
    delete:
      summary: Delete a category by ID
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category to delete
      responses:
        '200':
          description: Category deleted successfully
        '404':
          description: Category not found
  /categories:
    get:
      summary: Get a list of all categories
      responses:
        '200':
          description: List of categories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        MFD:
          type: string
        EXP:
          type: string
        rate:
          type: integer
        unit:
          type: string
        description:
          type: string
        image:
          type: string
        mimetype:
          type: string
        quantity:
          type: integer
        category_id:
          type: integer
      required:
        - id
        - name
        - MFD
        - EXP
        - rate
        - description
        - image
        - mimetype
        - quantity
        - category_id
    ProductUpdate:
      type: object
      properties:
        name:
          type: string
        MFD:
          type: string
        EXP:
          type: string
        rate:
          type: integer
        unit:
          type: string
        description:
          type: string
        image:
          type: string
        mimetype:
          type: string
        quantity:
          type: integer
        category_id:
          type: integer
      required:
        - name
        - MFD
        - EXP
        - rate
        - description
        - image
        - mimetype
        - quantity
        - category_id
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    CategoryUpdate:
      type: object
      properties:
        name:
          type: string
      required:
        - name
